)
# Compute predicted vowel-ethnicity averages
df_predicted <- lda_data %>%
group_by(predicted_ethnicity, vowel) %>%  # Need vowel for clarity in grouping
summarise(
f1_avg = mean(rowMeans(across(c(f11, f15)), na.rm = TRUE)),
f2_avg = mean(rowMeans(across(c(f21, f25)), na.rm = TRUE)),
type = "Predicted"
)
# Combine both sets into one dataset
df_plot01 <- bind_rows(df_actual, df_predicted)
df_plot_clean <- df_plot01 %>%
filter(!is.na(vowel), !is.na(predicted_ethnicity))
ggplot(df_plot_clean, aes(x = f2_avg, y = f1_avg, color = vowel, shape = predicted_ethnicity)) +
geom_point(size = 4, alpha = 0.8) +
geom_text_repel(aes(label = vowel), size = 5, fontface = "bold") +
scale_y_reverse() +
scale_x_reverse() +
theme_classic() +
labs(
title = "",
x = "F2 (Hz)",
y = "F1 (Hz)",
color = "Vowel",
shape = "Predicted Ethnicity"
) +
theme(
legend.position = "bottom",
axis.title = element_text(size = 14, face = "bold"),
axis.text = element_text(size = 12)
)
View(lda_data)
winner_class = predict(lda_modelnew)$class
winner_tmp = unlist (strsplit (as.character(winner_class), "_"))
winner_vowel = winner_tmp[seq(1,length(winner_tmp),2)]
winner_eth = winner_tmp[seq(2,length(winner_tmp),2)]
mean(dat$ethnicity == winner_eth)
tapply (dat$ethnicity == winner_eth, dat$vowel, mean)
hit = (dat$ethnicity == "EA") & (winner_eth == "EA")
fa = (dat$ethnicity == "W") & (winner_eth == "EA")
hit_vowel = tapply (hit, dat[,c("vowel","ethnicity")], mean)[,1]
fa_vowel = tapply (fa, dat[,c("vowel","ethnicity")], mean)[,2]
dprime = bmmb::ptoz(hit_vowel) - bmmb::ptoz(fa_vowel)
bias = (bmmb::ptoz(hit_vowel) + bmmb::ptoz(fa_vowel))/2
winner_class = predict(lda_model)$class
winner_tmp = unlist (strsplit (as.character(winner_class), "_"))
winner_vowel = winner_tmp[seq(1,length(winner_tmp),2)]
winner_eth = winner_tmp[seq(2,length(winner_tmp),2)]
mean(dat$ethnicity == winner_eth)
tapply (lda_data$ethnicity == winner_eth, lda_data$vowel, mean)
hit = (lda_data$ethnicity == "EA") & (winner_eth == "EA")
fa = (lda_data$ethnicity == "W") & (winner_eth == "EA")
hit_vowel = tapply (hit, lda_data[,c("vowel","ethnicity")], mean)[,1]
fa_vowel = tapply (fa, lda_data[,c("vowel","ethnicity")], mean)[,2]
dprime = bmmb::ptoz(hit_vowel) - bmmb::ptoz(fa_vowel)
bias = (bmmb::ptoz(hit_vowel) + bmmb::ptoz(fa_vowel))/2
dat_list = split (lda_data, lda_data$participant)
ea = c(1,6,11:16,18:21)
w = (1:22)[-ea]
n = 1000
dprimes = matrix (0, n,13)
biases = matrix (0, n,13)
for (i in 1:n){
if (i %% 100 == 0) {
print (i)
}
ea_tmp = sample (ea, 12, replace = TRUE)
w_tmp = sample (w, 10, replace = TRUE)
dat_tmp = do.call (rbind, dat_list[c(ea_tmp, w_tmp)])
lda_model = MASS::lda (vowel_ethnicity ~ f11 + f15 + f21 + f25 + f31 + f35, data = dat_tmp)
winner_class = predict(lda_model)$class
winner_tmp = unlist (strsplit (as.character(winner_class), "_"))
winner_vowel = winner_tmp[seq(1,length(winner_tmp),2)]
winner_eth = winner_tmp[seq(2,length(winner_tmp),2)]
#mean(dat_tmp$ethnicity == winner_eth)
#tapply (dat_tmp$ethnicity == winner_eth, dat_tmp$vowel, mean)
hit = (dat_tmp$ethnicity == "EA") & (winner_eth == "EA")
fa = (dat_tmp$ethnicity == "W") & (winner_eth == "EA")
hit_vowel = tapply (hit, dat_tmp[,c("vowel","ethnicity")], mean)[,1]
fa_vowel = tapply (fa, dat_tmp[,c("vowel","ethnicity")], mean)[,2]
dprimes[i,] = bmmb::ptoz(hit_vowel) - bmmb::ptoz(fa_vowel)
biases[i,] = (bmmb::ptoz(hit_vowel) + bmmb::ptoz(fa_vowel))/2
}
par (mfrow = c(2,1), mar = c(4,4,1,1))
boxplot (dprimes)
abline (h=0)
boxplot (biases)
abline (h=0)
dprimes_null = matrix (0, n,13)
biases_null = matrix (0, n,13)
for (i in 1:n){
if (i %% 100 == 0) {
print (i)
}
tmp_ = sample (1:22, 11, replace = FALSE)
tmp = sample (tmp_, 11, replace = TRUE)
dat_tmp1 = do.call (rbind, dat_list[tmp])
tmp = sample ((1:22)[-tmp_], 11, replace = TRUE)
dat_tmp2 = do.call (rbind, dat_list[tmp])
dat_tmp1$ethnicity = "EA"
dat_tmp2$ethnicity = "W"
dat_tmp = rbind (dat_tmp1, dat_tmp2)
lda_model = MASS::lda (vowel_ethnicity ~ f11 + f15 + f21 + f25 + f31 + f35, data = dat_tmp)
winner_class = predict(lda_model)$class
winner_tmp = unlist (strsplit (as.character(winner_class), "_"))
winner_vowel = winner_tmp[seq(1,length(winner_tmp),2)]
winner_eth = winner_tmp[seq(2,length(winner_tmp),2)]
hit = (dat_tmp$ethnicity == "EA") & (winner_eth == "EA")
fa = (dat_tmp$ethnicity == "W") & (winner_eth == "EA")
hit_vowel = tapply (hit, dat_tmp[,c("vowel","ethnicity")], mean)[,1]
fa_vowel = tapply (fa, dat_tmp[,c("vowel","ethnicity")], mean)[,2]
dprimes_null[i,] = bmmb::ptoz(hit_vowel) - bmmb::ptoz(fa_vowel)
biases_null[i,] = (bmmb::ptoz(hit_vowel) + bmmb::ptoz(fa_vowel))/2
}
par (mfcol = c(2,2), mar = c(4,4,1,1))
boxplot (dprimes, col = 3)
abline (h=0)
boxplot (biases, col = 2)
abline (h=0)
boxplot (dprimes_null, col = 3)
abline (h=0)
boxplot (biases_null, col = 2)
abline (h=0)
par (mfcol = c(2,1), mar = c(2,4,.5,1))
bmmb::brmplot (brms::posterior_summary(dprimes), labels = sort(unique(dat$vowel)))
bmmb::brmplot (brms::posterior_summary(dprimes,probs = c(.1,.9)),
add = TRUE, lwd=5, labels = "")
points (1:13, dprime, pch=4, col=2, cex=2)
mtext ("Sensitivity", side=2, line=2.5)
bmmb::brmplot (brms::posterior_summary(biases), labels = sort(unique(dat$vowel)))
bmmb::brmplot (brms::posterior_summary(biases,probs = c(.1,.9)),
add = TRUE, lwd=5, labels = "")
points (1:13, bias, pch=4, col=2, cex=2)
mtext ("Bias", side=2, line = 2.5)
for (i in 1:n){
if (i %% 100 == 0) {
print (i)
}
ea_tmp = sample (ea, 12, replace = TRUE)
w_tmp = sample (w, 10, replace = TRUE)
dat_tmp = do.call (rbind, dat_list[c(ea_tmp, w_tmp)])
lda_model = MASS::lda (vowel_ethnicity ~ f11 + f15 + f21 + f25 + f31 + f35, data = dat_tmp)
winner_class = predict(lda_model)$class
winner_tmp = unlist (strsplit (as.character(winner_class), "_"))
winner_vowel = winner_tmp[seq(1,length(winner_tmp),2)]
winner_eth = winner_tmp[seq(2,length(winner_tmp),2)]
#mean(dat_tmp$ethnicity == winner_eth)
#tapply (dat_tmp$ethnicity == winner_eth, dat_tmp$vowel, mean)
hit = (dat_tmp$ethnicity == "EA") & (winner_eth == "EA")
fa = (dat_tmp$ethnicity == "W") & (winner_eth == "EA")
hit_vowel = tapply (hit, dat_tmp[,c("vowel","ethnicity")], mean)[,1]
fa_vowel = tapply (fa, dat_tmp[,c("vowel","ethnicity")], mean)[,2]
dprimes[i,] = bmmb::ptoz(hit_vowel) - bmmb::ptoz(fa_vowel)
biases[i,] = (bmmb::ptoz(hit_vowel) + bmmb::ptoz(fa_vowel))/2
}
par (mfrow = c(2,1), mar = c(4,4,1,1))
boxplot (dprimes)
abline (h=0)
boxplot (biases)
abline (h=0)
dprimes_null = matrix (0, n,13)
biases_null = matrix (0, n,13)
for (i in 1:n){
if (i %% 100 == 0) {
print (i)
}
tmp_ = sample (1:22, 11, replace = FALSE)
tmp = sample (tmp_, 11, replace = TRUE)
dat_tmp1 = do.call (rbind, dat_list[tmp])
tmp = sample ((1:22)[-tmp_], 11, replace = TRUE)
dat_tmp2 = do.call (rbind, dat_list[tmp])
dat_tmp1$ethnicity = "EA"
dat_tmp2$ethnicity = "W"
dat_tmp = rbind (dat_tmp1, dat_tmp2)
lda_model = MASS::lda (vowel_ethnicity ~ f11 + f15 + f21 + f25 + f31 + f35, data = dat_tmp)
winner_class = predict(lda_model)$class
winner_tmp = unlist (strsplit (as.character(winner_class), "_"))
winner_vowel = winner_tmp[seq(1,length(winner_tmp),2)]
winner_eth = winner_tmp[seq(2,length(winner_tmp),2)]
hit = (dat_tmp$ethnicity == "EA") & (winner_eth == "EA")
fa = (dat_tmp$ethnicity == "W") & (winner_eth == "EA")
hit_vowel = tapply (hit, dat_tmp[,c("vowel","ethnicity")], mean)[,1]
fa_vowel = tapply (fa, dat_tmp[,c("vowel","ethnicity")], mean)[,2]
dprimes_null[i,] = bmmb::ptoz(hit_vowel) - bmmb::ptoz(fa_vowel)
biases_null[i,] = (bmmb::ptoz(hit_vowel) + bmmb::ptoz(fa_vowel))/2
}
par (mfcol = c(2,2), mar = c(4,4,1,1))
boxplot (dprimes, col = 3)
abline (h=0)
boxplot (biases, col = 2)
abline (h=0)
boxplot (dprimes_null, col = 3)
abline (h=0)
boxplot (biases_null, col = 2)
abline (h=0)
par (mfcol = c(2,1), mar = c(2,4,.5,1))
bmmb::brmplot (brms::posterior_summary(dprimes), labels = sort(unique(dat$vowel)))
bmmb::brmplot (brms::posterior_summary(dprimes,probs = c(.1,.9)),
add = TRUE, lwd=5, labels = "")
points (1:13, dprime, pch=4, col=2, cex=2)
mtext ("Sensitivity", side=2, line=2.5)
bmmb::brmplot (brms::posterior_summary(biases), labels = sort(unique(dat$vowel)))
bmmb::brmplot (brms::posterior_summary(biases,probs = c(.1,.9)),
add = TRUE, lwd=5, labels = "")
points (1:13, bias, pch=4, col=2, cex=2)
mtext ("Bias", side=2, line = 2.5)
par (mfcol = c(2,2), mar = c(4,4,1,1))
boxplot (dprimes, col = 3)
abline (h=0)
boxplot (biases, col = 2)
abline (h=0)
boxplot (dprimes_null, col = 3)
abline (h=0)
boxplot (biases_null, col = 2)
abline (h=0)
par (mfcol = c(2,1), mar = c(2,4,.5,1))
bmmb::brmplot (brms::posterior_summary(dprimes), labels = sort(unique(lda_data$vowel)))
bmmb::brmplot (brms::posterior_summary(dprimes,probs = c(.1,.9)),
add = TRUE, lwd=5, labels = "")
points (1:13, dprime, pch=4, col=2, cex=2)
mtext ("Sensitivity", side=2, line=2.5)
bmmb::brmplot (brms::posterior_summary(biases), labels = sort(unique(lda_data$vowel)))
bmmb::brmplot (brms::posterior_summary(biases,probs = c(.1,.9)),
add = TRUE, lwd=5, labels = "")
points (1:13, bias, pch=4, col=2, cex=2)
mtext ("Bias", side=2, line = 2.5)
for (i in 1:n){
if (i %% 100 == 0) {
}
tmp_ = sample (1:22, 11, replace = FALSE)
tmp = sample (tmp_, 11, replace = TRUE)
dat_tmp1 = do.call (rbind, dat_list[tmp])
tmp = sample ((1:22)[-tmp_], 11, replace = TRUE)
dat_tmp2 = do.call (rbind, dat_list[tmp])
dat_tmp1$ethnicity = "EA"
dat_tmp2$ethnicity = "W"
dat_tmp = rbind (dat_tmp1, dat_tmp2)
lda_model = MASS::lda (vowel_ethnicity ~ f11 + f15 + f21 + f25 + f31 + f35, data = dat_tmp)
winner_class = predict(lda_model)$class
winner_tmp = unlist (strsplit (as.character(winner_class), "_"))
winner_vowel = winner_tmp[seq(1,length(winner_tmp),2)]
winner_eth = winner_tmp[seq(2,length(winner_tmp),2)]
hit = (dat_tmp$ethnicity == "EA") & (winner_eth == "EA")
fa = (dat_tmp$ethnicity == "W") & (winner_eth == "EA")
hit_vowel = tapply (hit, dat_tmp[,c("vowel","ethnicity")], mean)[,1]
fa_vowel = tapply (fa, dat_tmp[,c("vowel","ethnicity")], mean)[,2]
dprimes_null[i,] = bmmb::ptoz(hit_vowel) - bmmb::ptoz(fa_vowel)
biases_null[i,] = (bmmb::ptoz(hit_vowel) + bmmb::ptoz(fa_vowel))/2
}
library(tidyverse)         # dplyr + tidyr + ggplot2
library(ggdist)            # pretty CI slabs (optional but nice)
#--- name the columns with the actual IPA vowel labels -----
vowels <- sort(unique(lda_data$vowel))          # 13 levels
for(mat in c("dprimes","biases","dprimes_null","biases_null")){
colnames(get(mat)) <- vowels
}
library(ggdist)
install.packages(ggdist)
library(ggdist)
install.packages("ggdist")
library(ggdist)
install.packages("ggdist")
install.packages("ggdist")
library(ggdist)
library(ggdist)
devtools::install_github("mjskay/ggdist")
library(ggdist)
#--- name the columns with the actual IPA vowel labels -----
vowels <- sort(unique(lda_data$vowel))          # 13 levels
for(mat in c("dprimes","biases","dprimes_null","biases_null")){
colnames(get(mat)) <- vowels
}
par (mfcol = c(2,2), mar = c(4,4,1,1))
boxplot (dprimes, col = 3)
abline (h=0)
boxplot (biases, col = 2)
abline (h=0)
boxplot (dprimes_null, col = 3)
abline (h=0)
boxplot (biases_null, col = 2)
abline (h=0)
par (mfcol = c(2,1), mar = c(2,4,.5,1))
bmmb::brmplot (brms::posterior_summary(dprimes), labels = sort(unique(lda_data$vowel)))
bmmb::brmplot (brms::posterior_summary(dprimes,probs = c(.1,.9)),
add = TRUE, lwd=5, labels = "")
points (1:13, dprime, pch=4, col=2, cex=2)
mtext ("Sensitivity", side=2, line=2.5)
bmmb::brmplot (brms::posterior_summary(biases), labels = sort(unique(lda_data$vowel)))
bmmb::brmplot (brms::posterior_summary(biases,probs = c(.1,.9)),
add = TRUE, lwd=5, labels = "")
points (1:13, bias, pch=4, col=2, cex=2)
mtext ("Bias", side=2, line = 2.5)
library(tidyverse)
library(ggplot2)
library(MASS)
library(dplyr)
library(ggrepel)
lda_data = readxl::read_excel("C:\\Users\\verde\\OneDrive\\Desktop\\Prelim\\Prelim\\data.xlsx")
lda_data=lda_data[lda_data$vowel!="i",]
lda_model <- lda(vowel_ethnicity ~ f11 + f21 + f31 + f15 + f25 + f35,
data = lda_data)
predictions <- predict(lda_model)
confusion_matrix <- table(lda_data$vowel_ethnicity, predictions$class)
df_actual <- lda_data %>%
group_by(vowel_ethnicity) %>%
summarise(
f1_avg = mean(rowMeans(across(c(f11, f15)), na.rm = TRUE)),
f2_avg = mean(rowMeans(across(c(f21, f25)), na.rm = TRUE)),
type = "Actual"
)
# Compute predicted vowel-ethnicity averages
df_predicted <- lda_data %>%
group_by(predicted_ethnicity, vowel) %>%  # Need vowel for clarity in grouping
summarise(
f1_avg = mean(rowMeans(across(c(f11, f15)), na.rm = TRUE)),
f2_avg = mean(rowMeans(across(c(f21, f25)), na.rm = TRUE)),
type = "Predicted"
)
# Combine both sets into one dataset
df_plot01 <- bind_rows(df_actual, df_predicted)
df_plot_clean <- df_plot01 %>%
filter(!is.na(vowel), !is.na(predicted_ethnicity))
ggplot(df_plot_clean, aes(x = f2_avg, y = f1_avg, color = vowel, shape = predicted_ethnicity)) +
geom_point(size = 4, alpha = 0.8) +
geom_text_repel(aes(label = vowel), size = 5, fontface = "bold") +
scale_y_reverse() +
scale_x_reverse() +
theme_classic() +
labs(
title = "",
x = "F2 (Hz)",
y = "F1 (Hz)",
color = "Vowel",
shape = "Predicted Ethnicity"
) +
theme(
legend.position = "bottom",
axis.title = element_text(size = 14, face = "bold"),
axis.text = element_text(size = 12)
)
winner_class = predict(lda_model)$class
winner_tmp = unlist (strsplit (as.character(winner_class), "_"))
winner_vowel = winner_tmp[seq(1,length(winner_tmp),2)]
winner_eth = winner_tmp[seq(2,length(winner_tmp),2)]
mean(lda_data$ethnicity == winner_eth)
tapply (lda_data$ethnicity == winner_eth, lda_data$vowel, mean)
hit = (lda_data$ethnicity == "EA") & (winner_eth == "EA")
fa = (lda_data$ethnicity == "W") & (winner_eth == "EA")
hit_vowel = tapply (hit, lda_data[,c("vowel","ethnicity")], mean)[,1]
fa_vowel = tapply (fa, lda_data[,c("vowel","ethnicity")], mean)[,2]
dprime = bmmb::ptoz(hit_vowel) - bmmb::ptoz(fa_vowel)
bias = (bmmb::ptoz(hit_vowel) + bmmb::ptoz(fa_vowel))/2
dat_list = split (lda_data, lda_data$participant)
ea = c(1,6,11:16,18:21)
w = (1:22)[-ea]
n = 1000
dprimes = matrix (0, n,13)
biases = matrix (0, n,13)
for (i in 1:n){
if (i %% 100 == 0) {
print (i)
}
ea_tmp = sample (ea, 12, replace = TRUE)
w_tmp = sample (w, 10, replace = TRUE)
dat_tmp = do.call (rbind, dat_list[c(ea_tmp, w_tmp)])
lda_model = MASS::lda (vowel_ethnicity ~ f11 + f15 + f21 + f25 + f31 + f35, data = dat_tmp)
winner_class = predict(lda_model)$class
winner_tmp = unlist (strsplit (as.character(winner_class), "_"))
winner_vowel = winner_tmp[seq(1,length(winner_tmp),2)]
winner_eth = winner_tmp[seq(2,length(winner_tmp),2)]
#mean(dat_tmp$ethnicity == winner_eth)
#tapply (dat_tmp$ethnicity == winner_eth, dat_tmp$vowel, mean)
hit = (dat_tmp$ethnicity == "EA") & (winner_eth == "EA")
fa = (dat_tmp$ethnicity == "W") & (winner_eth == "EA")
hit_vowel = tapply (hit, dat_tmp[,c("vowel","ethnicity")], mean)[,1]
fa_vowel = tapply (fa, dat_tmp[,c("vowel","ethnicity")], mean)[,2]
dprimes[i,] = bmmb::ptoz(hit_vowel) - bmmb::ptoz(fa_vowel)
biases[i,] = (bmmb::ptoz(hit_vowel) + bmmb::ptoz(fa_vowel))/2
}
dat_list = split (lda_data, lda_data$participant)
ea = c(1,6,11:16,18:21)
w = (1:22)[-ea]
n = 1000
dprimes = matrix (0, n,13)
biases = matrix (0, n,13)
for (i in 1:n){
if (i %% 100 == 0) {
print (i)
}
ea_tmp = sample (ea, 12, replace = TRUE)
w_tmp = sample (w, 10, replace = TRUE)
dat_tmp = do.call (rbind, dat_list[c(ea_tmp, w_tmp)])
lda_model = MASS::lda (vowel_ethnicity ~ f11 + f15 + f21 + f25 + f31 + f35, data = dat_tmp)
winner_class = predict(lda_model)$class
winner_tmp = unlist (strsplit (as.character(winner_class), "_"))
winner_vowel = winner_tmp[seq(1,length(winner_tmp),2)]
winner_eth = winner_tmp[seq(2,length(winner_tmp),2)]
#mean(dat_tmp$ethnicity == winner_eth)
#tapply (dat_tmp$ethnicity == winner_eth, dat_tmp$vowel, mean)
hit = (dat_tmp$ethnicity == "EA") & (winner_eth == "EA")
fa = (dat_tmp$ethnicity == "W") & (winner_eth == "EA")
hit_vowel = tapply (hit, dat_tmp[,c("vowel","ethnicity")], mean)[,1]
fa_vowel = tapply (fa, dat_tmp[,c("vowel","ethnicity")], mean)[,2]
dprimes[i,] = bmmb::ptoz(hit_vowel) - bmmb::ptoz(fa_vowel)
biases[i,] = (bmmb::ptoz(hit_vowel) + bmmb::ptoz(fa_vowel))/2
}
par (mfrow = c(2,1), mar = c(4,4,1,1))
boxplot (dprimes)
abline (h=0)
boxplot (biases)
abline (h=0)
dprimes_null = matrix (0, n,13)
biases_null = matrix (0, n,13)
for (i in 1:n){
if (i %% 100 == 0) {
}
tmp_ = sample (1:22, 11, replace = FALSE)
tmp = sample (tmp_, 11, replace = TRUE)
dat_tmp1 = do.call (rbind, dat_list[tmp])
tmp = sample ((1:22)[-tmp_], 11, replace = TRUE)
dat_tmp2 = do.call (rbind, dat_list[tmp])
dat_tmp1$ethnicity = "EA"
dat_tmp2$ethnicity = "W"
dat_tmp = rbind (dat_tmp1, dat_tmp2)
lda_model = MASS::lda (vowel_ethnicity ~ f11 + f15 + f21 + f25 + f31 + f35, data = dat_tmp)
winner_class = predict(lda_model)$class
winner_tmp = unlist (strsplit (as.character(winner_class), "_"))
winner_vowel = winner_tmp[seq(1,length(winner_tmp),2)]
winner_eth = winner_tmp[seq(2,length(winner_tmp),2)]
hit = (dat_tmp$ethnicity == "EA") & (winner_eth == "EA")
fa = (dat_tmp$ethnicity == "W") & (winner_eth == "EA")
hit_vowel = tapply (hit, dat_tmp[,c("vowel","ethnicity")], mean)[,1]
fa_vowel = tapply (fa, dat_tmp[,c("vowel","ethnicity")], mean)[,2]
dprimes_null[i,] = bmmb::ptoz(hit_vowel) - bmmb::ptoz(fa_vowel)
biases_null[i,] = (bmmb::ptoz(hit_vowel) + bmmb::ptoz(fa_vowel))/2
}
par (mfcol = c(2,2), mar = c(4,4,1,1))
boxplot (dprimes, col = 3)
abline (h=0)
boxplot (biases, col = 2)
abline (h=0)
boxplot (dprimes_null, col = 3)
abline (h=0)
boxplot (biases_null, col = 2)
abline (h=0)
par (mfcol = c(2,1), mar = c(2,4,.5,1))
bmmb::brmplot (brms::posterior_summary(dprimes), labels = sort(unique(lda_data$vowel)))
bmmb::brmplot (brms::posterior_summary(dprimes,probs = c(.1,.9)),
add = TRUE, lwd=5, labels = "")
points (1:13, dprime, pch=4, col=2, cex=2)
mtext ("Sensitivity", side=2, line=2.5)
bmmb::brmplot (brms::posterior_summary(biases), labels = sort(unique(lda_data$vowel)))
bmmb::brmplot (brms::posterior_summary(biases,probs = c(.1,.9)),
add = TRUE, lwd=5, labels = "")
points (1:13, bias, pch=4, col=2, cex=2)
mtext ("Bias", side=2, line = 2.5)
par (mfcol = c(2,1), mar = c(2,4,.5,1))
bmmb::brmplot (brms::posterior_summary(dprimes), labels = sort(unique(lda_data$vowel)))
bmmb::brmplot (brms::posterior_summary(dprimes,probs = c(.1,.9)),
add = TRUE, lwd=5, labels = "")
points (1:13, dprime, pch=4, col=3, cex=2)
mtext ("Sensitivity", side=2, line=2.5)
bmmb::brmplot (brms::posterior_summary(biases), labels = sort(unique(lda_data$vowel)))
bmmb::brmplot (brms::posterior_summary(biases,probs = c(.1,.9)),
add = TRUE, lwd=5, labels = "")
points (1:13, bias, pch=4, col=2, cex=2)
mtext ("Bias", side=2, line = 2.5)
par (mfcol = c(2,1), mar = c(2,4,.5,1))
bmmb::brmplot (brms::posterior_summary(dprimes), labels = sort(unique(lda_data$vowel)))
bmmb::brmplot (brms::posterior_summary(dprimes,probs = c(.1,.9)),
add = TRUE, lwd=5, col=4, labels = "")
points (1:13, dprime, pch=4, col=3, cex=2)
mtext ("Sensitivity", side=2, line=2.5)
bmmb::brmplot (brms::posterior_summary(biases), labels = sort(unique(lda_data$vowel)))
bmmb::brmplot (brms::posterior_summary(biases,probs = c(.1,.9)),
add = TRUE, lwd=5, labels = "")
points (1:13, bias, pch=4, col=2, cex=2)
mtext ("Bias", side=2, line = 2.5)
par (mfcol = c(2,1), mar = c(2,4,.5,1))
bmmb::brmplot (brms::posterior_summary(dprimes), labels = sort(unique(lda_data$vowel)))
bmmb::brmplot (brms::posterior_summary(dprimes,probs = c(.1,.9)),
add = TRUE, lwd=5, col=4, labels = "")
points (1:13, dprime, pch=4, col=3, cex=2)
mtext ("Sensitivity", side=2, line=2.5)
bmmb::brmplot (brms::posterior_summary(biases), labels = sort(unique(lda_data$vowel)))
bmmb::brmplot (brms::posterior_summary(biases,probs = c(.1,.9)),
add = TRUE, lwd=5, col=4, labels = "")
points (1:13, bias, pch=4, col=2, cex=2)
mtext ("Bias", side=2, line = 2.5)
par (mfcol = c(2,1), mar = c(2,4,.5,1))
bmmb::brmplot (brms::posterior_summary(dprimes), labels = sort(unique(lda_data$vowel)))
bmmb::brmplot (brms::posterior_summary(dprimes,probs = c(.1,.9)),
add = TRUE, lwd=5, col=3, labels = "")
points (1:13, dprime, pch=4, col=3, cex=2)
mtext ("Sensitivity", side=2, line=2.5)
bmmb::brmplot (brms::posterior_summary(biases), labels = sort(unique(lda_data$vowel)))
bmmb::brmplot (brms::posterior_summary(biases,probs = c(.1,.9)),
add = TRUE, lwd=5, col=2, labels = "")
points (1:13, bias, pch=4, col=2, cex=2)
mtext ("Bias", side=2, line = 2.5)
View(lda_data)
par (mfcol = c(2,1), mar = c(2,4,.5,1))
bmmb::brmplot (brms::posterior_summary(dprimes), labels = sort(unique(lda_data$vowel)))
bmmb::brmplot (brms::posterior_summary(dprimes,probs = c(.1,.9)),
add = TRUE, lwd=5, col=3, labels = "")
points (1:13, dprime, pch=4, col=3, cex=2)
mtext ("Sensitivity", side=2, line=2.5)
bmmb::brmplot (brms::posterior_summary(biases), labels = sort(unique(lda_data$vowel)))
bmmb::brmplot (brms::posterior_summary(biases,probs = c(.1,.9)),
add = TRUE, lwd=5, col=2, labels = "")
points (1:13, bias, pch=4, col=2, cex=2)
mtext ("Bias", side=2, line = 2.5)
